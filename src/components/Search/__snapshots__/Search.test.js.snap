// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Search.js should match its empty snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Search />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "ingredients": Array [],
      "onAddIngredient": [Function],
      "onDeleteIngredient": [Function],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "ingredients": Array [],
        "onAddIngredient": [Function],
        "onDeleteIngredient": [Function],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`SearchForm.js should match its empty snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchForm
    ingredients={Array []}
    onAddIngredient={[Function]}
    onDeleteIngredient={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h3>
          Add your ingredients
</h3>,
        <Form
          as="form"
          size="large"
>
          <Autosuggest
                    alwaysRenderSuggestions={false}
                    focusInputOnSuggestionClick={true}
                    getSuggestionValue={[Function]}
                    highlightFirstSuggestion={false}
                    id="1"
                    inputProps={
                              Object {
                                        "onChange": [Function],
                                        "onKeyPress": [Function],
                                        "placeholder": "Enter you ingredients and hit enter",
                                        "value": "",
                                      }
                    }
                    multiSection={false}
                    onSuggestionsClearRequested={[Function]}
                    onSuggestionsFetchRequested={[Function]}
                    renderSuggestion={[Function]}
                    renderSuggestionsContainer={[Function]}
                    shouldRenderSuggestions={[Function]}
                    suggestions={Array []}
                    theme={
                              Object {
                                        "container": "react-autosuggest__container",
                                        "containerOpen": "react-autosuggest__container--open",
                                        "input": "react-autosuggest__input",
                                        "inputFocused": "react-autosuggest__input--focused",
                                        "inputOpen": "react-autosuggest__input--open",
                                        "sectionContainer": "react-autosuggest__section-container",
                                        "sectionContainerFirst": "react-autosuggest__section-container--first",
                                        "sectionTitle": "react-autosuggest__section-title",
                                        "suggestion": "react-autosuggest__suggestion",
                                        "suggestionFirst": "react-autosuggest__suggestion--first",
                                        "suggestionHighlighted": "react-autosuggest__suggestion--highlighted",
                                        "suggestionsContainer": "react-autosuggest__suggestions-container",
                                        "suggestionsContainerOpen": "react-autosuggest__suggestions-container--open",
                                        "suggestionsList": "react-autosuggest__suggestions-list",
                                      }
                    }
          />
</Form>,
        <div
          className="ingredients-holder"
>
          
</div>,
        <Button
          as="button"
          basic={true}
          circular={true}
          color="red"
          fluid={true}
>
          Search
</Button>,
      ],
      "className": "search-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Add your ingredients",
        },
        "ref": null,
        "rendered": "Add your ingredients",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "as": "form",
          "children": <Autosuggest
            alwaysRenderSuggestions={false}
            focusInputOnSuggestionClick={true}
            getSuggestionValue={[Function]}
            highlightFirstSuggestion={false}
            id="1"
            inputProps={
                        Object {
                                    "onChange": [Function],
                                    "onKeyPress": [Function],
                                    "placeholder": "Enter you ingredients and hit enter",
                                    "value": "",
                                  }
            }
            multiSection={false}
            onSuggestionsClearRequested={[Function]}
            onSuggestionsFetchRequested={[Function]}
            renderSuggestion={[Function]}
            renderSuggestionsContainer={[Function]}
            shouldRenderSuggestions={[Function]}
            suggestions={Array []}
            theme={
                        Object {
                                    "container": "react-autosuggest__container",
                                    "containerOpen": "react-autosuggest__container--open",
                                    "input": "react-autosuggest__input",
                                    "inputFocused": "react-autosuggest__input--focused",
                                    "inputOpen": "react-autosuggest__input--open",
                                    "sectionContainer": "react-autosuggest__section-container",
                                    "sectionContainerFirst": "react-autosuggest__section-container--first",
                                    "sectionTitle": "react-autosuggest__section-title",
                                    "suggestion": "react-autosuggest__suggestion",
                                    "suggestionFirst": "react-autosuggest__suggestion--first",
                                    "suggestionHighlighted": "react-autosuggest__suggestion--highlighted",
                                    "suggestionsContainer": "react-autosuggest__suggestions-container",
                                    "suggestionsContainerOpen": "react-autosuggest__suggestions-container--open",
                                    "suggestionsList": "react-autosuggest__suggestions-list",
                                  }
            }
/>,
          "size": "large",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "alwaysRenderSuggestions": false,
            "focusInputOnSuggestionClick": true,
            "getSuggestionValue": [Function],
            "highlightFirstSuggestion": false,
            "id": "1",
            "inputProps": Object {
              "onChange": [Function],
              "onKeyPress": [Function],
              "placeholder": "Enter you ingredients and hit enter",
              "value": "",
            },
            "multiSection": false,
            "onSuggestionsClearRequested": [Function],
            "onSuggestionsFetchRequested": [Function],
            "renderSuggestion": [Function],
            "renderSuggestionsContainer": [Function],
            "shouldRenderSuggestions": [Function],
            "suggestions": Array [],
            "theme": Object {
              "container": "react-autosuggest__container",
              "containerOpen": "react-autosuggest__container--open",
              "input": "react-autosuggest__input",
              "inputFocused": "react-autosuggest__input--focused",
              "inputOpen": "react-autosuggest__input--open",
              "sectionContainer": "react-autosuggest__section-container",
              "sectionContainerFirst": "react-autosuggest__section-container--first",
              "sectionTitle": "react-autosuggest__section-title",
              "suggestion": "react-autosuggest__suggestion",
              "suggestionFirst": "react-autosuggest__suggestion--first",
              "suggestionHighlighted": "react-autosuggest__suggestion--highlighted",
              "suggestionsContainer": "react-autosuggest__suggestions-container",
              "suggestionsContainerOpen": "react-autosuggest__suggestions-container--open",
              "suggestionsList": "react-autosuggest__suggestions-list",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [],
          "className": "ingredients-holder",
        },
        "ref": null,
        "rendered": Array [],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "as": "button",
          "basic": true,
          "children": "Search",
          "circular": true,
          "color": "red",
          "fluid": true,
        },
        "ref": null,
        "rendered": "Search",
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h3>
            Add your ingredients
</h3>,
          <Form
            as="form"
            size="large"
>
            <Autosuggest
                        alwaysRenderSuggestions={false}
                        focusInputOnSuggestionClick={true}
                        getSuggestionValue={[Function]}
                        highlightFirstSuggestion={false}
                        id="1"
                        inputProps={
                                    Object {
                                                "onChange": [Function],
                                                "onKeyPress": [Function],
                                                "placeholder": "Enter you ingredients and hit enter",
                                                "value": "",
                                              }
                        }
                        multiSection={false}
                        onSuggestionsClearRequested={[Function]}
                        onSuggestionsFetchRequested={[Function]}
                        renderSuggestion={[Function]}
                        renderSuggestionsContainer={[Function]}
                        shouldRenderSuggestions={[Function]}
                        suggestions={Array []}
                        theme={
                                    Object {
                                                "container": "react-autosuggest__container",
                                                "containerOpen": "react-autosuggest__container--open",
                                                "input": "react-autosuggest__input",
                                                "inputFocused": "react-autosuggest__input--focused",
                                                "inputOpen": "react-autosuggest__input--open",
                                                "sectionContainer": "react-autosuggest__section-container",
                                                "sectionContainerFirst": "react-autosuggest__section-container--first",
                                                "sectionTitle": "react-autosuggest__section-title",
                                                "suggestion": "react-autosuggest__suggestion",
                                                "suggestionFirst": "react-autosuggest__suggestion--first",
                                                "suggestionHighlighted": "react-autosuggest__suggestion--highlighted",
                                                "suggestionsContainer": "react-autosuggest__suggestions-container",
                                                "suggestionsContainerOpen": "react-autosuggest__suggestions-container--open",
                                                "suggestionsList": "react-autosuggest__suggestions-list",
                                              }
                        }
            />
</Form>,
          <div
            className="ingredients-holder"
>
            
</div>,
          <Button
            as="button"
            basic={true}
            circular={true}
            color="red"
            fluid={true}
>
            Search
</Button>,
        ],
        "className": "search-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Add your ingredients",
          },
          "ref": null,
          "rendered": "Add your ingredients",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "form",
            "children": <Autosuggest
              alwaysRenderSuggestions={false}
              focusInputOnSuggestionClick={true}
              getSuggestionValue={[Function]}
              highlightFirstSuggestion={false}
              id="1"
              inputProps={
                            Object {
                                          "onChange": [Function],
                                          "onKeyPress": [Function],
                                          "placeholder": "Enter you ingredients and hit enter",
                                          "value": "",
                                        }
              }
              multiSection={false}
              onSuggestionsClearRequested={[Function]}
              onSuggestionsFetchRequested={[Function]}
              renderSuggestion={[Function]}
              renderSuggestionsContainer={[Function]}
              shouldRenderSuggestions={[Function]}
              suggestions={Array []}
              theme={
                            Object {
                                          "container": "react-autosuggest__container",
                                          "containerOpen": "react-autosuggest__container--open",
                                          "input": "react-autosuggest__input",
                                          "inputFocused": "react-autosuggest__input--focused",
                                          "inputOpen": "react-autosuggest__input--open",
                                          "sectionContainer": "react-autosuggest__section-container",
                                          "sectionContainerFirst": "react-autosuggest__section-container--first",
                                          "sectionTitle": "react-autosuggest__section-title",
                                          "suggestion": "react-autosuggest__suggestion",
                                          "suggestionFirst": "react-autosuggest__suggestion--first",
                                          "suggestionHighlighted": "react-autosuggest__suggestion--highlighted",
                                          "suggestionsContainer": "react-autosuggest__suggestions-container",
                                          "suggestionsContainerOpen": "react-autosuggest__suggestions-container--open",
                                          "suggestionsList": "react-autosuggest__suggestions-list",
                                        }
              }
/>,
            "size": "large",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "alwaysRenderSuggestions": false,
              "focusInputOnSuggestionClick": true,
              "getSuggestionValue": [Function],
              "highlightFirstSuggestion": false,
              "id": "1",
              "inputProps": Object {
                "onChange": [Function],
                "onKeyPress": [Function],
                "placeholder": "Enter you ingredients and hit enter",
                "value": "",
              },
              "multiSection": false,
              "onSuggestionsClearRequested": [Function],
              "onSuggestionsFetchRequested": [Function],
              "renderSuggestion": [Function],
              "renderSuggestionsContainer": [Function],
              "shouldRenderSuggestions": [Function],
              "suggestions": Array [],
              "theme": Object {
                "container": "react-autosuggest__container",
                "containerOpen": "react-autosuggest__container--open",
                "input": "react-autosuggest__input",
                "inputFocused": "react-autosuggest__input--focused",
                "inputOpen": "react-autosuggest__input--open",
                "sectionContainer": "react-autosuggest__section-container",
                "sectionContainerFirst": "react-autosuggest__section-container--first",
                "sectionTitle": "react-autosuggest__section-title",
                "suggestion": "react-autosuggest__suggestion",
                "suggestionFirst": "react-autosuggest__suggestion--first",
                "suggestionHighlighted": "react-autosuggest__suggestion--highlighted",
                "suggestionsContainer": "react-autosuggest__suggestions-container",
                "suggestionsContainerOpen": "react-autosuggest__suggestions-container--open",
                "suggestionsList": "react-autosuggest__suggestions-list",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
            "className": "ingredients-holder",
          },
          "ref": null,
          "rendered": Array [],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "button",
            "basic": true,
            "children": "Search",
            "circular": true,
            "color": "red",
            "fluid": true,
          },
          "ref": null,
          "rendered": "Search",
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
